name: Alpha Honeypot CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 bandit safety
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Security check with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
    
    - name: Check dependencies for vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
    
    - name: Test setup script
      run: |
        python setup.py
    
    - name: Basic functionality test
      run: |
        python -c "
        import app
        import config
        print('âœ… Basic imports successful')
        
        # Test configuration
        config.Config.validate_config()
        print('âœ… Configuration validation passed')
        
        # Test Flask app creation
        app.app.testing = True
        client = app.app.test_client()
        print('âœ… Flask app creation successful')
        
        # Test basic routes
        response = client.get('/')
        assert response.status_code == 200
        print('âœ… Main route accessible')
        
        response = client.get('/dashboard')
        assert response.status_code == 200
        print('âœ… Dashboard route accessible')
        
        print('ðŸŽ‰ All basic tests passed!')
        "
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ matrix.python-version }}
        path: |
          bandit-report.json
          safety-report.json

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        echo "FROM python:3.9-slim" > Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY requirements.txt ." >> Dockerfile
        echo "RUN pip install -r requirements.txt" >> Dockerfile
        echo "COPY . ." >> Dockerfile
        echo "RUN python setup.py" >> Dockerfile
        echo "EXPOSE 5000" >> Dockerfile
        echo "CMD [\"python\", \"app.py\"]" >> Dockerfile
        
        docker build -t alpha-honeypot .
    
    - name: Test Docker container
      run: |
        docker run -d --name honeypot-test -p 5000:5000 alpha-honeypot
        sleep 10
        curl -f http://localhost:5000 || exit 1
        docker stop honeypot-test
        docker rm honeypot-test
